<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title>フォレストシューター</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      overflow: hidden;
      background: #111;
      font-family: sans-serif;
    }
    #gameCanvas {
      background: url('background.png');
      width: 100vw;
      height: 100vh;
      display: block;
    }
    #ui {
      position: absolute;
      top: 10px;
      left: 10px;
      color: white;
      z-index: 10;
    }
    .button {
      background: #333;
      border: 1px solid #888;
      color: white;
      padding: 10px;
      margin: 5px;
      cursor: pointer;
    }
    #pauseMenu {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(0, 0, 0, 0.8);
      padding: 20px;
      color: white;
      display: none;
      z-index: 20;
    }
  </style>
</head>
<body>
  <canvas id="gameCanvas" width="800" height="600"></canvas>

  <div id="ui">
    <div>HP: <span id="hp">100</span></div>
    <div>敵HP: <span id="enemyHp">100</span></div>
    <div>
      <button class="button" onclick="startGame()">最初から</button>
      <button class="button" onclick="loadGame()">続きから</button>
      <button class="button" onclick="togglePause()">ポーズ</button>
    </div>
  </div>

  <div id="pauseMenu">
    <div>一時停止中</div>
    <button class="button" onclick="togglePause()">再開</button>
  </div>

  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');
    let player = { x: 400, y: 500, hp: 100, isCharging: false };
    let enemy = { x: 400, y: 100, hp: 100 };
    let bullets = [];
    let keys = {};
    let isPaused = false;

    function drawPlayer() {
      ctx.fillStyle = player.isCharging ? 'yellow' : 'lime';
      ctx.fillRect(player.x - 20, player.y - 20, 40, 40);
    }

    function drawEnemy() {
      ctx.fillStyle = 'red';
      ctx.fillRect(enemy.x - 20, enemy.y - 20, 40, 40);
    }

    function drawBullets() {
      ctx.fillStyle = 'white';
      for (const bullet of bullets) {
        ctx.fillRect(bullet.x - 2, bullet.y - 5, 4, 10);
      }
    }

    function gameLoop() {
      if (isPaused) return;

      ctx.clearRect(0, 0, canvas.width, canvas.height);
      movePlayer();
      updateBullets();
      drawPlayer();
      drawEnemy();
      drawBullets();
      checkCollisions();
      requestAnimationFrame(gameLoop);
    }

    function movePlayer() {
      if (keys['ArrowLeft']) player.x -= 5;
      if (keys['ArrowRight']) player.x += 5;
    }

    function updateBullets() {
      for (const bullet of bullets) bullet.y -= 10;
    }

    function checkCollisions() {
      bullets = bullets.filter(b => {
        const hit = b.y < enemy.y + 20 && b.y > enemy.y - 20 && Math.abs(b.x - enemy.x) < 20;
        if (hit) enemy.hp -= 10;
        return !hit && b.y > 0;
      });
      document.getElementById('enemyHp').textContent = enemy.hp;
    }

    function startGame() {
      player.hp = 100;
      enemy.hp = 100;
      bullets = [];
      player.x = 400;
      document.getElementById('hp').textContent = player.hp;
      document.getElementById('enemyHp').textContent = enemy.hp;
      gameLoop();
    }

    function loadGame() {
      const saved = JSON.parse(localStorage.getItem('forestShooterSave'));
      if (!saved) return;
      player = saved.player;
      enemy = saved.enemy;
      bullets = saved.bullets;
      gameLoop();
    }

    function saveGame() {
      localStorage.setItem('forestShooterSave', JSON.stringify({ player, enemy, bullets }));
    }

    function togglePause() {
      isPaused = !isPaused;
      document.getElementById('pauseMenu').style.display = isPaused ? 'block' : 'none';
      if (!isPaused) gameLoop();
    }

    window.addEventListener('keydown', e => {
      keys[e.key] = true;
      if (e.key === ' ') {
        bullets.push({ x: player.x, y: player.y - 20 });
      }
    });

    window.addEventListener('keyup', e => {
      keys[e.key] = false;
    });

    window.addEventListener('beforeunload', saveGame);
  </script>
</body>
</html>
